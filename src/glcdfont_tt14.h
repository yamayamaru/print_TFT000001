// glcdfont_tt14.h
// Version 0.3.1
//
//    print_GFX_ILI9341 LCD ILI9341 font print Library (C++)
//                                   https://twitter.com/yama23238
//
//    このプログラムはmicropython-ili9341を参考にして作成しました
//    https://github.com/jeffmer/micropython-ili9341
//
//    Copyright (c) 2017 Jeffrey N. Magee
//    Released under the MIT license
//    https://github.com/jeffmer/micropython-ili9341/blob/master/LICENSE
//

#ifndef _GLCDFONT_TT14_H
#define _GLCDFONT_TT14_H

#include "font_class.h"

const uint8_t _glcdfont_tt14_font01[] = {
    0x08, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x8c, 0x07, 0xcc, 0x07, 0xcc, 0x00, 0x7c, 0x00, 0x38, 0x00, 
    0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xfc, 0x06, 
    0xfc, 0x06, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 
    0x07, 0x00, 0x40, 0x03, 0xf0, 0x03, 0xf0, 0x03, 0x30, 0x03, 0xf0, 0x03, 0x30, 0x03, 0x30, 0x00, 
    0x07, 0x00, 0x30, 0x00, 0x78, 0x03, 0x6c, 0x02, 0xfc, 0x07, 0xd8, 0x03, 0x90, 0x03, 0x00, 0x00, 
    0x0b, 0x00, 0x18, 0x00, 0x3c, 0x00, 0x3c, 0x04, 0x3c, 0x03, 0xd8, 0x01, 0xf0, 0x03, 0xd8, 0x07, 
    0xc4, 0x06, 0xc0, 0x07, 0x80, 0x03, 0x00, 0x00, 0x09, 0x00, 0x80, 0x03, 0xf8, 0x07, 0x7c, 0x06, 
    0x4c, 0x06, 0xfc, 0x06, 0x98, 0x07, 0xc0, 0x07, 0xc0, 0x05, 0x00, 0x04, 0x02, 0x00, 0x1c, 0x00, 
    0x3c, 0x00, 0x04, 0x00, 0xf0, 0x03, 0xfc, 0x0f, 0x0e, 0x1c, 0x02, 0x10, 0x05, 0x00, 0x02, 0x10, 
    0x0e, 0x1c, 0xfc, 0x0f, 0xf0, 0x03, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x3c, 0x00, 0x18, 0x00, 
    0x2c, 0x00, 0x0c, 0x00, 0x07, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xf0, 0x03, 0xf0, 0x03, 0xc0, 0x00, 
    0xc0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x16, 0x00, 0x0e, 0x00, 0x00, 0x04, 0x00, 0xc0, 0x00, 
    0xc0, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0x03, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x04, 0x00, 
    0x00, 0x06, 0xe0, 0x07, 0xfc, 0x00, 0x0e, 0x00, 0x08, 0x00, 0xf0, 0x01, 0xf8, 0x03, 0x1c, 0x07, 
    0x0c, 0x06, 0x1c, 0x07, 0xf8, 0x03, 0xf0, 0x01, 0x00, 0x00, 0x04, 0x00, 0x18, 0x00, 0xfc, 0x07, 
    0xfc, 0x07, 0x00, 0x00, 0x08, 0x00, 0x18, 0x04, 0x1c, 0x07, 0x8c, 0x06, 0x8c, 0x06, 0x4c, 0x06, 
    0x7c, 0x06, 0x38, 0x06, 0x00, 0x00, 0x07, 0x00, 0x08, 0x02, 0x0c, 0x06, 0x0c, 0x06, 0x6c, 0x06, 
    0x6c, 0x06, 0xfc, 0x07, 0xd8, 0x03, 0x07, 0x00, 0x80, 0x01, 0xe0, 0x01, 0xb0, 0x01, 0x9c, 0x01, 
    0xfc, 0x07, 0xfc, 0x07, 0x80, 0x01, 0x07, 0x00, 0x00, 0x02, 0xfc, 0x06, 0x6c, 0x06, 0x6c, 0x06, 
    0x6c, 0x06, 0xcc, 0x03, 0xc0, 0x03, 0x08, 0x00, 0xf0, 0x01, 0xf8, 0x03, 0x6c, 0x06, 0x6c, 0x06, 
    0x6c, 0x06, 0xe8, 0x07, 0xc0, 0x03, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x0c, 0x07, 0xcc, 0x07, 
    0xfc, 0x00, 0x1c, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x98, 0x03, 0xfc, 0x07, 0x6c, 0x06, 0x6c, 0x06, 
    0x6c, 0x06, 0xfc, 0x07, 0x98, 0x03, 0x08, 0x00, 0x78, 0x02, 0xfc, 0x06, 0xcc, 0x06, 0xcc, 0x06, 
    0xcc, 0x06, 0xf8, 0x03, 0xf0, 0x01, 0x00, 0x00, 0x03, 0x00, 0x30, 0x06, 0x30, 0x06, 0x00, 0x00, 
    0x03, 0x00, 0x30, 0x16, 0x30, 0x0e, 0x00, 0x00, 0x06, 0x00, 0xc0, 0x01, 0xc0, 0x01, 0x60, 0x03, 
    0x60, 0x03, 0x30, 0x06, 0x00, 0x00, 0x06, 0x00, 0x60, 0x03, 0x60, 0x03, 0x60, 0x03, 0x60, 0x03, 
    0x60, 0x03, 0x60, 0x03, 0x06, 0x00, 0x30, 0x06, 0x60, 0x03, 0x60, 0x03, 0x40, 0x01, 0xc0, 0x01, 
    0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x8c, 0x07, 0xcc, 0x07, 0xcc, 0x00, 0x7c, 0x00, 
    0x38, 0x00, 0x00, 0x00, 0x0b, 0x00, 0xe0, 0x00, 0xf8, 0x01, 0x18, 0x03, 0xec, 0x07, 0xbc, 0x07, 
    0xfc, 0x06, 0xfc, 0x07, 0x9c, 0x03, 0xf8, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x06, 
    0x80, 0x07, 0xf0, 0x01, 0x9c, 0x01, 0x8c, 0x01, 0xf8, 0x01, 0xc0, 0x07, 0x00, 0x07, 0x08, 0x00, 
    0xfc, 0x07, 0xfc, 0x07, 0x6c, 0x06, 0x6c, 0x06, 0x6c, 0x06, 0xfc, 0x07, 0xd8, 0x03, 0x00, 0x00, 
    0x09, 0x00, 0xe0, 0x00, 0xf8, 0x03, 0x18, 0x03, 0x0c, 0x06, 0x0c, 0x06, 0x0c, 0x06, 0x1c, 0x07, 
    0x18, 0x03, 0x20, 0x01, 0x09, 0x00, 0xfc, 0x07, 0xfc, 0x07, 0x0c, 0x06, 0x0c, 0x06, 0x1c, 0x07, 
    0xf8, 0x03, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xfc, 0x07, 0xfc, 0x07, 0x6c, 0x06, 
    0x6c, 0x06, 0x6c, 0x06, 0x6c, 0x06, 0x0c, 0x06, 0x00, 0x00, 0x07, 0x00, 0xfc, 0x07, 0xfc, 0x07, 
    0xcc, 0x00, 0xcc, 0x00, 0xcc, 0x00, 0xcc, 0x00, 0x0c, 0x00, 0x0a, 0x00, 0xe0, 0x01, 0xf8, 0x03, 
    0x18, 0x07, 0x0c, 0x06, 0x0c, 0x06, 0xcc, 0x06, 0xdc, 0x02, 0xd8, 0x07, 0xe0, 0x07, 0x00, 0x00, 
    0x09, 0x00, 0xfc, 0x07, 0xfc, 0x07, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0xfc, 0x07, 0xfc, 0x07, 
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xfc, 0x07, 0xfc, 0x07, 0x00, 0x00, 0x07, 0x00, 0x80, 0x03, 
    0x80, 0x07, 0x00, 0x06, 0x00, 0x06, 0xfc, 0x07, 0xfc, 0x03, 0x00, 0x00, 0x08, 0x00, 0xfc, 0x07, 
    0xfc, 0x07, 0x60, 0x00, 0xf0, 0x00, 0xd8, 0x01, 0x0c, 0x07, 0x04, 0x06, 0x04, 0x04, 0x07, 0x00, 
    0xfc, 0x07, 0xfc, 0x07, 0x00, 0x06, 0x00, 0x06, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x0b, 0x00, 
    0xfc, 0x07, 0xfc, 0x07, 0x3c, 0x00, 0xe0, 0x03, 0x00, 0x06, 0xe0, 0x03, 0x3c, 0x00, 0xfc, 0x07, 
    0xfc, 0x07, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0xfc, 0x07, 0xfc, 0x07, 0x38, 0x00, 0xe0, 0x00, 
    0x80, 0x03, 0xfc, 0x07, 0xfc, 0x07, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0xf0, 0x01, 0xf8, 0x03, 
    0x1c, 0x07, 0x0c, 0x06, 0x0c, 0x06, 0x0c, 0x06, 0x1c, 0x07, 0xf8, 0x03, 0xf0, 0x01, 0x00, 0x00, 
    0x09, 0x00, 0xfc, 0x07, 0xfc, 0x07, 0xcc, 0x00, 0xcc, 0x00, 0xcc, 0x00, 0xfc, 0x00, 0x78, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0xf0, 0x01, 0xf8, 0x03, 0x1c, 0x07, 0x0c, 0x06, 0x8c, 0x06, 
    0x8c, 0x07, 0x1c, 0x07, 0xf8, 0x07, 0xf0, 0x05, 0x00, 0x00, 0x09, 0x00, 0xfc, 0x07, 0xfc, 0x07, 
    0xcc, 0x00, 0xcc, 0x00, 0xcc, 0x03, 0x7c, 0x07, 0x78, 0x04, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 
    0x38, 0x01, 0x3c, 0x03, 0x4c, 0x06, 0x4c, 0x06, 0x4c, 0x06, 0x4c, 0x06, 0x98, 0x07, 0x90, 0x03, 
    0x00, 0x00, 0x07, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0xfc, 0x07, 0xfc, 0x07, 0x0c, 0x00, 0x0c, 0x00, 
    0x00, 0x00, 0x09, 0x00, 0xfc, 0x03, 0xfc, 0x07, 0x00, 0x06, 0x00, 0x06, 0x00, 0x06, 0xfc, 0x07, 
    0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x7c, 0x00, 0xe0, 0x03, 0x00, 0x07, 
    0x80, 0x07, 0xf8, 0x01, 0x3c, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x0c, 0x00, 0xfc, 0x00, 0xe0, 0x07, 
    0x80, 0x07, 0xf8, 0x03, 0x1c, 0x00, 0xfc, 0x00, 0xc0, 0x07, 0x80, 0x07, 0xfc, 0x01, 0x1c, 0x00, 
    0x08, 0x00, 0x04, 0x04, 0x0c, 0x07, 0xb8, 0x03, 0xf0, 0x00, 0xf0, 0x01, 0x9c, 0x07, 0x0c, 0x06, 
    0x04, 0x04, 0x08, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x78, 0x00, 0xe0, 0x07, 0xe0, 0x07, 0x78, 0x00, 
    0x1c, 0x00, 0x04, 0x00, 0x07, 0x00, 0x0c, 0x06, 0x0c, 0x07, 0x8c, 0x07, 0xcc, 0x06, 0x2c, 0x06, 
    0x1c, 0x06, 0x0c, 0x06, 0x04, 0x00, 0xff, 0x1f, 0xff, 0x1f, 0x03, 0x18, 0x00, 0x00, 0x04, 0x00, 
    0x0e, 0x00, 0xfe, 0x00, 0xe0, 0x07, 0x00, 0x07, 0x04, 0x00, 0x03, 0x18, 0xff, 0x1f, 0xff, 0x1f, 
    0x00, 0x00, 0x07, 0x00, 0x80, 0x00, 0xe0, 0x00, 0x7c, 0x00, 0x0c, 0x00, 0x7c, 0x00, 0xe0, 0x00, 
    0x80, 0x00, 0x0a, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 
    0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x05, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x08, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x03, 0xe0, 0x07, 0xb0, 0x06, 0xb0, 0x06, 0xb0, 0x02, 
    0xf0, 0x07, 0xe0, 0x07, 0x00, 0x00, 0x09, 0x00, 0xfe, 0x07, 0xfe, 0x07, 0x30, 0x02, 0x30, 0x06, 
    0x30, 0x06, 0xe0, 0x07, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xc0, 0x01, 0xe0, 0x03, 
    0x30, 0x06, 0x30, 0x06, 0x30, 0x06, 0x60, 0x03, 0x40, 0x01, 0x08, 0x00, 0xc0, 0x01, 0xf0, 0x07, 
    0x30, 0x06, 0x30, 0x06, 0x30, 0x06, 0xfe, 0x07, 0xfe, 0x07, 0x00, 0x00, 0x07, 0x00, 0xc0, 0x01, 
    0xe0, 0x03, 0xb0, 0x07, 0xb0, 0x07, 0xb0, 0x07, 0xe0, 0x03, 0xc0, 0x01, 0x04, 0x00, 0x20, 0x00, 
    0xfc, 0x07, 0xfe, 0x07, 0x00, 0x00, 0x08, 0x00, 0xc0, 0x11, 0xf0, 0x1f, 0x30, 0x36, 0x30, 0x36, 
    0x20, 0x36, 0xf0, 0x1f, 0xf0, 0x0f, 0x00, 0x00, 0x08, 0x00, 0xfe, 0x07, 0xfe, 0x07, 0x30, 0x00, 
    0x30, 0x00, 0xf0, 0x07, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xfc, 0x07, 0xfc, 0x07, 
    0x00, 0x00, 0x03, 0x00, 0xec, 0x7f, 0xec, 0x3f, 0x00, 0x00, 0x07, 0x00, 0xfe, 0x07, 0xfe, 0x07, 
    0xc0, 0x00, 0xe0, 0x01, 0xb0, 0x07, 0x10, 0x06, 0x10, 0x04, 0x03, 0x00, 0xfe, 0x07, 0xfe, 0x07, 
    0x00, 0x00, 0x0c, 0x00, 0xf0, 0x07, 0xf0, 0x07, 0x30, 0x00, 0x30, 0x00, 0xf0, 0x07, 0xe0, 0x07, 
    0x30, 0x00, 0x30, 0x00, 0xf0, 0x07, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xf0, 0x07, 
    0xf0, 0x07, 0x30, 0x00, 0x30, 0x00, 0xf0, 0x07, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 
    0xc0, 0x01, 0xe0, 0x03, 0x30, 0x06, 0x30, 0x06, 0x30, 0x06, 0xe0, 0x03, 0xc0, 0x01, 0x00, 0x00, 
    0x09, 0x00, 0xf0, 0x3f, 0xf0, 0x3f, 0x30, 0x06, 0x30, 0x06, 0x30, 0x06, 0xf0, 0x07, 0xc0, 0x01, 
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xc0, 0x01, 0xf0, 0x07, 0x30, 0x06, 0x30, 0x06, 0x30, 0x06, 
    0xf0, 0x3f, 0xf0, 0x3f, 0x00, 0x00, 0x04, 0x00, 0xf0, 0x07, 0xf0, 0x07, 0x30, 0x00, 0x30, 0x00, 
    0x08, 0x00, 0x60, 0x00, 0x70, 0x03, 0xb0, 0x07, 0xf0, 0x06, 0xb0, 0x06, 0xa0, 0x07, 0x00, 0x03, 
    0x00, 0x00, 0x04, 0x00, 0x30, 0x00, 0xfe, 0x03, 0xfe, 0x07, 0x00, 0x00, 0x08, 0x00, 0xf0, 0x03, 
    0xf0, 0x07, 0x00, 0x06, 0x00, 0x06, 0xf0, 0x07, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 
    0x30, 0x00, 0xf0, 0x00, 0x80, 0x07, 0x00, 0x06, 0xc0, 0x03, 0xf0, 0x00, 0x10, 0x00, 0x0a, 0x00, 
    0x30, 0x00, 0xf0, 0x01, 0x80, 0x07, 0xc0, 0x07, 0xf0, 0x00, 0xf0, 0x00, 0x80, 0x07, 0x80, 0x07, 
    0xf0, 0x01, 0x30, 0x00, 0x07, 0x00, 0x10, 0x04, 0x30, 0x07, 0xe0, 0x03, 0xc0, 0x01, 0x70, 0x07, 
    0x10, 0x06, 0x00, 0x04, 0x07, 0x00, 0x30, 0x00, 0xf0, 0x30, 0xc0, 0x3f, 0x00, 0x1f, 0xe0, 0x03, 
    0x70, 0x00, 0x10, 0x00, 0x06, 0x00, 0x30, 0x06, 0x30, 0x07, 0xb0, 0x07, 0xf0, 0x06, 0x70, 0x06, 
    0x30, 0x06, 0x05, 0x00, 0x40, 0x00, 0xbe, 0x0f, 0xbe, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 
    0xfe, 0x07, 0xfe, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xbe, 0x0f, 0xbe, 0x0f, 0x40, 0x00, 
    0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x06, 0x00, 0x04, 0x00      };

const uint8_t _glcdfont_tt14_index01[] = {
    0x00, 0x00, 0x12, 0x00, 0x1c, 0x00, 0x24, 0x00, 0x30, 0x00, 0x40, 0x00, 0x50, 0x00, 0x68, 0x00, 
    0x7c, 0x00, 0x82, 0x00, 0x8c, 0x00, 0x98, 0x00, 0xa4, 0x00, 0xb4, 0x00, 0xbc, 0x00, 0xc6, 0x00, 
    0xce, 0x00, 0xd8, 0x00, 0xea, 0x00, 0xf4, 0x00, 0x06, 0x01, 0x16, 0x01, 0x26, 0x01, 0x36, 0x01, 
    0x48, 0x01, 0x56, 0x01, 0x66, 0x01, 0x78, 0x01, 0x80, 0x01, 0x88, 0x01, 0x96, 0x01, 0xa4, 0x01, 
    0xb2, 0x01, 0xc4, 0x01, 0xdc, 0x01, 0xee, 0x01, 0x00, 0x02, 0x14, 0x02, 0x28, 0x02, 0x3a, 0x02, 
    0x4a, 0x02, 0x60, 0x02, 0x74, 0x02, 0x7c, 0x02, 0x8c, 0x02, 0x9e, 0x02, 0xae, 0x02, 0xc6, 0x02, 
    0xda, 0x02, 0xf0, 0x02, 0x04, 0x03, 0x1a, 0x03, 0x2e, 0x03, 0x42, 0x03, 0x52, 0x03, 0x66, 0x03, 
    0x78, 0x03, 0x90, 0x03, 0xa2, 0x03, 0xb4, 0x03, 0xc4, 0x03, 0xce, 0x03, 0xd8, 0x03, 0xe2, 0x03, 
    0xf2, 0x03, 0x08, 0x04, 0x14, 0x04, 0x26, 0x04, 0x3a, 0x04, 0x4a, 0x04, 0x5c, 0x04, 0x6c, 0x04, 
    0x76, 0x04, 0x88, 0x04, 0x9a, 0x04, 0xa2, 0x04, 0xaa, 0x04, 0xba, 0x04, 0xc2, 0x04, 0xdc, 0x04, 
    0xee, 0x04, 0x00, 0x05, 0x14, 0x05, 0x26, 0x05, 0x30, 0x05, 0x42, 0x05, 0x4c, 0x05, 0x5e, 0x05, 
    0x6e, 0x05, 0x84, 0x05, 0x94, 0x05, 0xa4, 0x05, 0xb2, 0x05, 0xbe, 0x05, 0xc8, 0x05, 0xd2, 0x05, 
    0xde, 0x05      };



class glcdfont_tt14 : public font_class01 {

public:
    glcdfont_tt14() {}
    ~glcdfont_tt14() {}

    int32_t height() {
        return 15;
    }

    int32_t max_width() {
        return 12;
    }

    bool hmap() {
        return false;
    }

    bool reverse() {
        return false;
    }

    bool monospaced() {
        return false;
    }

    int32_t min_ch() {
        return 32;
    }

    int32_t max_ch() {
        return 126;
    }

    int32_t _chr_addr(char ch) {
        union {
            int8_t  b[4];
            int32_t i;
        } a;
        uint32_t offset;
        offset = 2 * ((uint32_t)ch - 32);
        a.b[0] = _glcdfont_tt14_index01[offset];
        a.b[1] = _glcdfont_tt14_index01[offset + 1];
        a.b[2] = 0;
        a.b[3] = 0;
        return  a.i;
    }

    int32_t get_width(const char *s, int32_t size) {

        int32_t width, offset, length01, i;
        unsigned char ch;

        width = 0;
        length01 = strnlen(s, size);
        for (i = 0; i < length01; i++) {
            ch = s[i];
            width += get_ch_char_w(ch);
        }
        return width;
    }

    int32_t get_ch_char_w(char ch) {
        union {
            int8_t  b[4];
            int32_t i;
        } a;
        int32_t offset;
        char ordch;

        ordch = ((ch >= 32) && (ch <= 126)) ?  (ch + 1) : 32;
        offset = _chr_addr(ordch);
        a.b[0] = _glcdfont_tt14_font01[offset];
        a.b[1] = _glcdfont_tt14_font01[offset + 1];
        a.b[2] = 0;
        a.b[3] = 0;
        return a.i;
    }

    void get_ch(char ch, uint8_t **buf) {
        union {
            int8_t  b[4];
            int32_t i;
        } a;
        int32_t offset, next_offs;
        char    ordch;

        ordch = ((ch >= 32) && (ch <= 126)) ?  (ch + 1) : 32;
        offset = _chr_addr(ordch);
        next_offs = _chr_addr(ordch + 1);
        for (int i = 0; i < (next_offs - (offset + 2)); i++) {
            (*buf)[i] = _glcdfont_tt14_font01[offset + 2 + i];
        }
    }
};

#endif  // _GLCDFONT_TT14_H